---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ggs
  labels:
    app: ggs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ggs
  template:
    metadata:
      labels:
        app: ggs
    spec:
      volumes:
        - name: ggs-data
          persistentVolumeClaim:
            claimName: ggs-data-pvc
        - name: config-preferences
          configMap:
            name: ggs-preferences
      containers:
        - name: ggs-container
          image: @IMAGE_URI@
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              cpu: 6
              memory: 20Gi
          volumeMounts:
            - name: ggs-data
              mountPath: /usr/local/ggs-data
            - name: config-preferences
              mountPath: /usr/local/ggs-preferences/geocodePreferences.xml
              subPath: geocodePreferences.xml
          readinessProbe:
            httpGet:
              path: /geocode/rest/GeocodeService/geocode
              port: http
            initialDelaySeconds: 20
            failureThreshold: 60
            timeoutSeconds: 2
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /geocode/rest/GeocodeService/geocode
              port: http
            initialDelaySeconds: 60
            failureThreshold: 60
            timeoutSeconds: 10
            periodSeconds: 60
          env:
            - name: GGS_DATA
              value: /usr/local/ggs-data
            - name: GGS_PREFERENCES
              value: /usr/local/ggs-preferences/geocodePreferences.xml
            - name: _GEOSTAN_JOURNAL_FILE
              value: $(GGS_DATA)/geostan.txt
            - name: JAVA_OPTS
              value: "-Xmx12G"
            - name: POD_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: ggs-container
                  resource: limits.cpu
          imagePullPolicy: IfNotPresent
      nodeSelector:
        node-app: ggs

